/*
** EPITECH PROJECT, 2020
** PSU_42sh_2019
** File description:
** Constants private_action
*/

#ifndef SH_CONSTANTS_PROMPT_PRIVATE_ACTION_H_
#define SH_CONSTANTS_PROMPT_PRIVATE_ACTION_H_

static const char BUILTIN_BINDKEY_HELP[] =
    "Usage: bindkey [options] [--] [KEY [COMMAND]]\n"
    "    -a   list or bind KEY in alternative key map\n"
    "    -b   interpret KEY as a C-, M-, F- or X- key name\n"
    "    -s   interpret COMMAND as a literal string to be output\n"
    "    -c   interpret COMMAND as a builtin or external command\n"
    "    -v   bind all keys to vi bindings\n"
    "    -e   bind all keys to emacs bindings\n"
    "    -d   bind all keys to default editor's bindings (emacs)\n"
    "    -l   list editor commands with descriptions\n"
    "    -r   remove KEY's binding\n"
    "    -k   interpret KEY as a symbolic arrow-key name\n"
    "    --   force a break from option processing\n"
    "    -u   (or any invalid option) this message\n\n"
    "    Without KEY or COMMAND, prints all bindings\n"
    "    Without COMMAND, prints the binding for KEY.\n";

static const char BUILTIN_BINDKEY_EDITOR_COMMANDS_WITH_DESCRIPTIONS[] =
    "backward-char\n"
    "          Move back a character\n"
    "backward-delete-char\n"
    "          Delete the character behind cursor\n"
    "backward-delete-word\n"
    "          Cut from beginning of current word to cursor - saved in cut buffer\n"
    "backward-kill-line\n"
    "          Cut from beginning of line to cursor - save in cut buffer\n"
    "backward-word\n"
    "          Move to beginning of current word\n"
    "beginning-of-line\n"
    "          Move to beginning of line\n"
    "capitalize-word\n"
    "          Capitalize the characters from cursor to end of current word\n"
    "change-case\n"
    "          Vi change case of character under cursor and advance one character\n"
    "change-till-end-of-line\n"
    "          Vi change to end of line\n"
    "clear-screen\n"
    "          Clear screen leaving current line on top\n"
    "complete-word\n"
    "          Complete current word\n"
    "complete-word-fwd\n"
    "          Tab forward through files\n"
    "complete-word-back\n"
    "          Tab backward through files\n"
    "complete-word-raw\n"
    "          Complete current word ignoring programmable completions\n"
    "copy-prev-word\n"
    "          Copy current word to cursor\n"
    "copy-region-as-kill\n"
    "          Copy area between mark and cursor to cut buffer\n"
    "dabbrev-expand\n"
    "          Expand to preceding word for which this is a prefix\n"
    "delete-char\n"
    "          Delete character under cursor\n"
    "delete-char-or-eof\n"
    "          Delete character under cursor or signal end of file on an empty line\n"
    "delete-char-or-list\n"
    "          Delete character under cursor or list completions if at end of line\n"
    "delete-char-or-list-or-eof\n"
    "          Delete character under cursor, list completions or signal end of file\n"
    "delete-word\n"
    "          Cut from cursor to end of current word - save in cut buffer\n"
    "digit\n"
    "          Adds to argument if started or enters digit\n"
    "digit-argument\n"
    "          Digit that starts argument\n"
    "down-history\n"
    "          Move to next history line\n"
    "downcase-word\n"
    "          Lowercase the characters from cursor to end of current word\n"
    "end-of-file\n"
    "          Indicate end of file\n"
    "end-of-line\n"
    "          Move cursor to end of line\n"
    "exchange-point-and-mark\n"
    "          Exchange the cursor and mark\n"
    "expand-glob\n"
    "          Expand file name wildcards\n"
    "expand-history\n"
    "          Expand history escapes\n"
    "expand-line\n"
    "          Expand the history escapes in a line\n"
    "expand-variables\n"
    "          Expand variables\n"
    "forward-char\n"
    "          Move forward one character\n"
    "forward-word\n"
    "          Move forward to end of current word\n"
    "gosmacs-transpose-chars\n"
    "          Exchange the two characters before the cursor\n"
    "history-search-backward\n"
    "          Search in history backward for line beginning as current\n"
    "history-search-forward\n"
    "          Search in history forward for line beginning as current\n"
    "insert-last-word\n"
    "          Insert last item of previous command\n"
    "i-search-fwd\n"
    "          Incremental search forward\n"
    "i-search-back\n"
    "          Incremental search backward\n"
    "keyboard-quit\n"
    "          Clear line\n"
    "kill-line\n"
    "          Cut to end of line and save in cut buffer\n"
    "kill-region\n"
    "          Cut area between mark and cursor and save in cut buffer\n"
    "kill-whole-line\n"
    "          Cut the entire line and save in cut buffer\n"
    "list-choices\n"
    "          List choices for completion\n"
    "list-choices-raw\n"
    "          List choices for completion overriding programmable completion\n"
    "list-glob\n"
    "          List file name wildcard matches\n"
    "list-or-eof\n"
    "          List choices for completion or indicate end of file if empty line\n"
    "load-average\n"
    "          Display load average and current process status\n"
    "magic-space\n"
    "          Expand history escapes and insert a space\n"
    "newline\n"
    "          Execute command\n"
    "newline-and-hold\n"
    "          Execute command and keep current line\n"
    "newline-and-down-history\n"
    "          Execute command and move to next history line\n"
    "normalize-path\n"
    "          Expand pathnames, eliminating leading .'s and ..'s\n"
    "normalize-command\n"
    "          Expand commands to the resulting pathname or alias\n"
    "overwrite-mode\n"
    "          Switch from insert to overwrite mode or vice versa\n"
    "prefix-meta\n"
    "          Add 8th bit to next character typed\n"
    "quoted-insert\n"
    "          Add the next character typed to the line verbatim\n"
    "redisplay\n"
    "          Redisplay everything\n"
    "run-fg-editor\n"
    "          Restart stopped editor\n"
    "run-help\n"
    "          Look for help on current command\n"
    "self-insert-command\n"
    "          This character is added to the line\n"
    "sequence-lead-in\n"
    "          This character is the first in a character sequence\n"
    "set-mark-command\n"
    "          Set the mark at cursor\n"
    "spell-word\n"
    "          Correct the spelling of current word\n"
    "spell-line\n"
    "          Correct the spelling of entire line\n"
    "stuff-char\n"
    "          Send character to tty in cooked mode\n"
    "toggle-literal-history\n"
    "          Toggle between literal and lexical current history line\n"
    "transpose-chars\n"
    "          Exchange the character to the left of the cursor with the one under\n"
    "transpose-gosling\n"
    "          Exchange the two characters before the cursor\n"
    "tty-dsusp\n"
    "          Tty delayed suspend character\n"
    "tty-flush-output\n"
    "          Tty flush output character\n"
    "tty-sigintr\n"
    "          Tty interrupt character\n"
    "tty-sigquit\n"
    "          Tty quit character\n"
    "tty-sigtsusp\n"
    "          Tty suspend character\n"
    "tty-start-output\n"
    "          Tty allow output character\n"
    "tty-stop-output\n"
    "          Tty disallow output character\n"
    "undefined-key\n"
    "          Indicates unbound character\n"
    "universal-argument\n"
    "          Emacs universal argument (argument times 4)\n"
    "up-history\n"
    "          Move to previous history line\n"
    "upcase-word\n"
    "          Uppercase the characters from cursor to end of current word\n"
    "vi-beginning-of-next-word\n"
    "          Vi goto the beginning of next word\n"
    "vi-add\n"
    "          Vi enter insert mode after the cursor\n"
    "vi-add-at-eol\n"
    "          Vi enter insert mode at end of line\n"
    "vi-chg-case\n"
    "          Vi change case of character under cursor and advance one character\n"
    "vi-chg-meta\n"
    "          Vi change prefix command\n"
    "vi-chg-to-eol\n"
    "          Vi change to end of line\n"
    "vi-cmd-mode\n"
    "          Enter vi command mode (use alternative key bindings)\n"
    "vi-cmd-mode-complete\n"
    "          Vi command mode complete current word\n"
    "vi-delprev\n"
    "          Vi move to previous character (backspace)\n"
    "vi-delmeta\n"
    "          Vi delete prefix command\n"
    "vi-endword\n"
    "          Vi move to the end of the current space delimited word\n"
    "vi-eword\n"
    "          Vi move to the end of the current word\n"
    "vi-char-back\n"
    "          Vi move to the character specified backward\n"
    "vi-char-fwd\n"
    "          Vi move to the character specified forward\n"
    "vi-charto-back\n"
    "          Vi move up to the character specified backward\n"
    "vi-charto-fwd\n"
    "          Vi move up to the character specified forward\n"
    "vi-insert\n"
    "          Enter vi insert mode\n"
    "vi-insert-at-bol\n"
    "          Enter vi insert mode at beginning of line\n"
    "vi-repeat-char-fwd\n"
    "          Vi repeat current character search in the same search direction\n"
    "vi-repeat-char-back\n"
    "          Vi repeat current character search in the opposite search direction\n"
    "vi-repeat-search-fwd\n"
    "          Vi repeat current search in the same search direction\n"
    "vi-repeat-search-back\n"
    "          Vi repeat current search in the opposite search direction\n"
    "vi-replace-char\n"
    "          Vi replace character under the cursor with the next character typed\n"
    "vi-replace-mode\n"
    "          Vi replace mode\n"
    "vi-search-back\n"
    "          Vi search history backward\n"
    "vi-search-fwd\n"
    "          Vi search history forward\n"
    "vi-substitute-char\n"
    "          Vi replace character under the cursor and enter insert mode\n"
    "vi-substitute-line\n"
    "          Vi replace entire line\n"
    "vi-word-back\n"
    "          Vi move to the previous word\n"
    "vi-word-fwd\n"
    "          Vi move to the next word\n"
    "vi-undo\n"
    "          Vi undo last change\n"
    "vi-zero\n"
    "          Vi goto the beginning of line\n"
    "which-command\n"
    "          Perform which of current command\n"
    "yank\n"
    "          Paste cut buffer at cursor position\n"
    "yank-pop\n"
    "          Replace just-yanked text with yank from earlier kill\n"
    "e_copy_to_clipboard\n"
    "          (WIN32 only) Copy cut buffer to system clipboard\n"
    "e_paste_from_clipboard\n"
    "          (WIN32 only) Paste clipboard buffer at cursor position\n"
    "e_dosify_next\n"
    "          (WIN32 only) Convert each '/' in next word to '\\'\n"
    "e_dosify_prev\n"
    "          (WIN32 only) Convert each '/' in previous word to '\\'\n"
    "e_page_up\n"
    "          (WIN32 only) Page visible console window up\n"
    "e_page_down\n"
    "          (WIN32 only) Page visible console window down\n";

#endif
